// <auto-generated />
using System;
using HomiesAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HomiesAPI.Migrations
{
    [DbContext(typeof(HomiesContext))]
    [Migration("20180722190051_AddLocationAndLinkToHomies")]
    partial class AddLocationAndLinkToHomies
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HomiesAPI.Models.CheckIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HomieId");

                    b.Property<DateTime>("Time");

                    b.Property<bool>("WithGuest");

                    b.HasKey("Id");

                    b.HasIndex("HomieId");

                    b.ToTable("CheckIns");
                });

            modelBuilder.Entity("HomiesAPI.Models.CheckOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HomieId");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.HasIndex("HomieId");

                    b.ToTable("CheckOuts");
                });

            modelBuilder.Entity("HomiesAPI.Models.Homie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("HasGuest");

                    b.Property<bool>("IsHome");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("NickName");

                    b.HasKey("Id");

                    b.ToTable("Homies");
                });

            modelBuilder.Entity("HomiesAPI.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AreaCode");

                    b.Property<string>("City");

                    b.Property<string>("HouseNumber");

                    b.Property<string>("State");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("HomiesAPI.Models.LocationHomie", b =>
                {
                    b.Property<int>("HomieId");

                    b.Property<int>("LocationId");

                    b.HasKey("HomieId", "LocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationHomies");
                });

            modelBuilder.Entity("HomiesAPI.Models.CheckIn", b =>
                {
                    b.HasOne("HomiesAPI.Models.Homie", "Homie")
                        .WithMany("CheckIns")
                        .HasForeignKey("HomieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HomiesAPI.Models.CheckOut", b =>
                {
                    b.HasOne("HomiesAPI.Models.Homie", "Homie")
                        .WithMany("CheckOuts")
                        .HasForeignKey("HomieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HomiesAPI.Models.LocationHomie", b =>
                {
                    b.HasOne("HomiesAPI.Models.Homie", "Homie")
                        .WithMany("LocationHomies")
                        .HasForeignKey("HomieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HomiesAPI.Models.Location", "Location")
                        .WithMany("LocationHomies")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
